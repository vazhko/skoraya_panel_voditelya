//Generating by Configurator.exe
//Autor Wajko Wladislaw

#ifndef 	EEPROM_H
#define 	EEPROM_H

#define   PW_UNIT_NO    0x0000  // 1

/******************************************************************************************/
#define 	EEPROM_INIT \
__EEPROM_DATA(0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\
__EEPROM_DATA(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00);\

// Default EEPROM values
#define    EE_DATA  \
 {0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

// Write enable flags
#define IS_WRITEBLE  \
 0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL,0x0000UL


/******************************************************************************************/
void write___ee(unsigned int adr, unsigned char *var, unsigned char byte);
void read___ee(unsigned int adr, unsigned char *var, unsigned char byte);
void set_ee_default(void);	

/******************************************************************************************/
#define RAM_TO_EE(adr, var) write___ee(adr, (char *)&var, sizeof(var))
#define EE_TO_RAM(adr, var)  read___ee(adr, (char *)&var, sizeof(var))

#define BUFF_TO_EE(adr, buff, n) write___ee(adr, (char *)&buff, n)
#define EE_TO_BUFF(adr, buff, n)  read___ee(adr, (char *)&buff, n)

/******************************************************************************************/	
unsigned char is_ee_wr(unsigned int adr);

/******************************************************************************************/

#endif
